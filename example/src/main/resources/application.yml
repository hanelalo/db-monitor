server:
  port: 8080

spring:
  application:
    name: db-monitor-example
  
  # H2数据库配置（用于演示）
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password:
  
  # JPA配置
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  
  # H2控制台配置
  h2:
    console:
      enabled: true
      path: /h2-console

# 数据库监控配置
db:
  monitor:
    enabled: true
    data-source-name: dataSource
    table-names:
      - user_*
      - order_info
      - product_*
    time-interval:
      type: MINUTES
      value: 1  # 1分钟间隔用于演示
    xxl-job:
      enabled: false

    # 分片执行配置
    sharding:
      enabled: true                    # 启用分片执行（演示用）
      strategy: CONFIG_ID              # 使用配置ID分片策略
      max-configs-per-shard: 50        # 单个分片最大处理50个配置
      timeout-seconds: 1800            # 30分钟超时

    monitor-table:
      table-name: db_monitor_statistics
      auto-create: true
      retention-days: 7
    metrics:
      enabled: true
      prefix: db_monitor
      endpoint: /metrics
      endpoints:
        enabled: true              # 启用所有端点（演示用）
        metrics-enabled: true      # 启用指标端点
        statistics-enabled: true   # 启用统计数据端点
        health-enabled: true       # 启用健康检查端点
        management-enabled: true   # 启用管理端点
        config-enabled: true       # 启用配置管理端点

# Spring Boot Actuator配置
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

# 日志配置
logging:
  level:
    com.github.starter.dbmonitor: DEBUG
    com.example: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE